version: "3.9"

services:
    postgres:
      image: postgres:14
      ports:
        - "${POSTGRES_PORT}:5432"
      environment:
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_DB: ${POSTGRES_DB}
      restart: always
      volumes:
        - ./tmp/pgdata:/var/lib/postgresql/data
      networks:
        - awesome

    client:
      container_name: prakticum-client
      image: prakticum-client
      build:
        context: .
        dockerfile: Dockerfile.client
        args:
          CLIENT_PORT: ${CLIENT_PORT}
      ports:
        - "${CLIENT_PORT}:${CLIENT_PORT}"
      environment:
        - CLIENT_PORT=${CLIENT_PORT}
        - SERVER_PORT=${SERVER_PORT}
        - SERVER_HOST=${SERVER_HOST}
      restart: always
      networks:
        - awesome

    server:
      container_name: prakticum-server
      image: prackicum-server
      build:
        context: .
        dockerfile: Dockerfile.server
        args:
          SERVER_PORT: ${SERVER_PORT}
      ports:
        - "${SERVER_PORT}:${SERVER_PORT}"
      environment:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_PORT: ${POSTGRES_PORT}
        POSTGRES_HOST: ${POSTGRES_HOST}
        SERVER_PORT: ${SERVER_PORT}
        NODE_ENV: production
      networks:
        - awesome
      volumes:
        - ./packages/client/dist:/app/client/dist
        - ./packages/client/dist-ssr:/app/client/dist-ssr
      depends_on:
        - postgres
        - client
      command: >
        sh -c "/app/wait-for.sh ${POSTGRES_HOST}:${POSTGRES_PORT} -- node /app/index.js"

networks:
  awesome:
    driver: bridge
